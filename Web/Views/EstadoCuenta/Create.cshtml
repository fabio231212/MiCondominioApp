@model Infraestructure.Models.Factura

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm("Save", "EstadoCuenta", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Factura</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-row">

            <div class="form-group col-12 col-sm-6 col-lg-4">
                @Html.LabelFor(model => model.FK_PlanCobro, htmlAttributes: new { @class = "control-label" })

                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-notes-medical"></i></span>
                    </div>
                    @Html.DropDownListFor(model => model.FK_PlanCobro,
         (SelectList)ViewBag.idPlanCobro,
         "Seleccione un Plan de Cobro",
         htmlAttributes: new { @class = "form-control", @id = "cboPlan" })
                </div>
                @Html.ValidationMessageFor(model => model.FK_PlanCobro, "", new { @class = "text-danger " })
            </div>

            <div class="form-group col-12 col-sm-6 col-lg-4">
                @Html.LabelFor(model => model.FK_Propiedad, htmlAttributes: new { @class = "control-label" })

                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-notes-medical"></i></span>
                    </div>
                    @Html.DropDownListFor(model => model.FK_Propiedad,
         (SelectList)ViewBag.idPropiedad,
         "Seleccione una Propiedad",
         htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.FK_Propiedad, "", new { @class = "text-danger " })
            </div>

            <div class="form-group col-12 col-sm-6 col-lg-4">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label" })
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                    </div>
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @id = "total" } })
                </div>
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}


<input type="text" id="total-element" readonly>

<script>


    @*$(document).ready(function () {
        $('#cboPlan').change(function () {
            var id = document.getElementById("cboPlan").value;
            $.ajax({
                url: '@Url.Action("GetPlanById", "EstadoCuenta")',
                type: "GET",
                data: JSON.stringify({ id: id }),
                dataType: "json",
                contentType: "application/json; charset=utf8",
                success: function (result) {
                    $('#total-element').Value = result.data; // asigna el valor al EditorFor
                },
                error: function (result) {
                    alert("Error");
                    console.log(result);
                }
            });
        });
    });*@

   $(document).ready(function () {
        $('#cboPlan').change(function () {
            var id = document.getElementById("cboPlan").value;
        $.ajax({
            url: '@Url.Action("GetPlanById", "PRUEBA")',
            data: { id: id },
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log(data.data)
            },
            error: function (xhr, status, error) {
                console.log('Error al obtener el dato: ' + error + xhr);
            }
        });
    });
});



</script>
