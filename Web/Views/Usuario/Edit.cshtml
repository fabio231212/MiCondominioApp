@model Infraestructure.Models.Usuario

@{
    ViewBag.Title = "Editar Usuario";
}




@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Save", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Usuario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none;" } })

    <div class="form-row">
        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.FK_Rol, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.DropDownListFor(model => model.FK_Rol,
              (SelectList)ViewBag.IdRol,
              "Seleccione un Rol",
              htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FK_Rol, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-house"></i></span>
                </div>
                @Html.DropDownListFor(model => model.Activo,
                (SelectList)ViewBag.Activo,
                "Seleccione un Estado",
                htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Actualizar" class="btn btn-outline-success" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}