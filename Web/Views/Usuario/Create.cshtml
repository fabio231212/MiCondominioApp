@model Infraestructure.Models.Usuario

@{
    ViewBag.Title = "Crear Usuario";
}




@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Save", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Usuario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-row">
        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-id-card"></i></span>
                </div>
                @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-a"></i></span>
                </div>
                @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-a"></i></span>
                </div>
                @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-at"></i></span>
                </div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-12 col-sm-6 col-lg-4">
            @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-lock"></i></span>
                </div>
                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
        </div>



    </div>
    <div class="form-row justify-content-around">
        <div class="form-group col-12 col-sm-6 col-lg-5">
            @Html.LabelFor(model => model.FK_Rol, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-person-circle-question"></i></span>
                </div>
                @Html.DropDownListFor(model => model.FK_Rol,
              (SelectList)ViewBag.IdRol,
              "Seleccione un Rol",
              htmlAttributes: new { @class = "form-control text-center" })
            </div>
            @Html.ValidationMessageFor(model => model.FK_Rol, "", new { @class = "text-danger" })
        </div>


        <div class="form-group col-12 col-sm-6 col-lg-5">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-triangle-exclamation"></i></span>
                </div>
                @Html.DropDownListFor(model => model.Activo,
                (SelectList)ViewBag.IdActivo,
                "Seleccione un Estado",
                htmlAttributes: new { @class = "form-control text-center" })
            </div>
            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


<button type="submit" class="btn bg-siteColor text-white"> <i class="fa-solid fa-user-plus text-white"></i> Crear Usuario</button>



<a href="@Url.Action("Index")" class="btn bg-danger text-white" ><i class="fa-solid fa-x text-white"></i>  Cancelar</a>

   



    }




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
