@model Infraestructure.Models.PlanCobro


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Save", "PlanesCobro", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PlanCobro</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.RubroCobro, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("rubrosSeleccionados",
       (MultiSelectList)ViewBag.IdRubro,
       htmlAttributes: new { @class = "form-control", multiple = "multiple", @id = "RubrosSeleccionados" })

    </div>
    @Html.ValidationMessageFor(model => model.RubroCobro, "", new { @class = "text-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", id = "precioTotal", htmlAttributes = new { @readonly = "readonly" } } })
    </div>
    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
</div>

    <button type="submit" class="btn bg-siteColor text-white"> <i class="fa-solid fa-plus text-white"></i> Añadir</button>



    <a href="@Url.Action("Index")" class="btn bg-danger text-white"><i class="fa-solid fa-x text-white"></i>  Cancelar</a>
</div>
}




<script>
    $(document).ready(function () {
        // Obtener el elemento select y el elemento donde se mostrará el total
        var selectRubros = $('#RubrosSeleccionados');
        var total = $('#precioTotal');

        // Al cambiar la selección del elemento select
        selectRubros.change(function () {
            var selectedOptions = selectRubros.find('option:selected');

            // Sumar o restar el precio de cada opción seleccionada al total
            var nuevoTotal = 0;
            selectedOptions.each(function () {
                var texto = $(this).text();
                var precio = parseFloat(texto.split('₡')[1]);
                nuevoTotal += precio;
            });

            // Actualizar el valor del total en tiempo real
            total.val(nuevoTotal.toFixed(2));
        });

    });



</script>
