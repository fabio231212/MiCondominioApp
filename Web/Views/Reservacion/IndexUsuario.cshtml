@model  Infraestructure.Models.Reservacion

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Save", "Reservacion", FormMethod.Post, new { enctype = "multipart/form-data", id = "form" }))
{
    @Html.AntiForgeryToken()
    <h4 class="header-title">Reservaciones</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-row">
    <div class="form-group col-12 col-sm-6 col-lg-4">
        @Html.LabelFor(model => model.FK_AreaComunal, htmlAttributes: new { @class = "control-label" })
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user"></i></span>
            </div>
            @Html.DropDownListFor(model => model.FK_AreaComunal,
    (SelectList)ViewBag.listaAreas,
    "Seleccione un Area",
    htmlAttributes: new { @class = "form-control", @id = "lista" })
        </div>
        @Html.ValidationMessageFor(model => model.FK_AreaComunal, "", new { @class = "text-danger" })
        <div id="invalidFechaEntrada"></div>
    </div>


    <div class="form-group col-12 col-sm-6 col-lg-4">

        @Html.LabelFor(model => model.FechaEntrada, htmlAttributes: new { @class = "control-label" })
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-calendar-days"></i></span>
            </div>
            @Html.TextBoxFor(model => model.FechaEntrada, new { @class = "form-control", @id = "FechaEntrada", @readonly = "readonly", @name = "FechaEntrada", @type = "datetime" })
        </div>
        @Html.ValidationMessageFor(model => model.FechaEntrada, "", new { @class = "text-danger ", @id = "validateFechaEntrada" })
    </div>

    <div class="form-group col-12 col-sm-6 col-lg-4">

        @Html.LabelFor(model => model.FechaSalida, htmlAttributes: new { @class = "control-label" })
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-calendar-days"></i></span>
            </div>
            @Html.TextBoxFor(model => model.FechaSalida, new { @class = "form-control", @id = "FechaSalida", @readonly = "readonly", @name = "FechaSalida", @type = "datetime" })
        </div>
        @Html.ValidationMessageFor(model => model.FechaSalida, "", new { @class = "text-danger ", @id = "validateFechaSalida" })
    </div>


</div>

    <button type="submit" class="btn mt-4 pr-4 pl-4 bg-siteColor text-white">Registrar Reservación</button>
}


@{
    IEnumerable<Infraestructure.Models.Reservacion> reservaciones = ViewBag.listaReservacion;
}

<div class="data-tables datatable-dark table-responsive" id="listaReservacion">
    <table id="dataTableReservacion" class="text-center">
        <thead class="text-capitalize">
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => model.Usuario.Nombre)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.FechaEntrada)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.FechaSalida)</th>
                <th scope="col"> @Html.DisplayNameFor(model => model.AreaComunal.Nombre)</th>
                <th scope="col"> @Html.DisplayNameFor(model => model.EstadoReservacion.Nombre)</th>
                <th scope="col"> @Html.DisplayNameFor(model => model.Nota)</th>
                <th scope="col">Acción</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in reservaciones)
            {

                <tr class="selected-row">
                    <td>@item.Usuario.Nombre</td>
                    <td>@item.FechaEntrada</td>
                    <td> @item.FechaSalida</td>
                    <td> @item.AreaComunal.Nombre</td>
                    <td> @item.EstadoReservacion.Nombre</td>
                    <td> @item.Nota</td>

                    <td>
                        @if (item.FK_Estado == 1 || item.FK_Estado == 2)
                        {
                            <button data-id="@item.Id" title="Cancelar Reservación" class="btn bg-warning btn-sm px-3 btnCancelar">
                                <i class="ti-trash text-white"></i>
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts{
    <script type="text/javascript">


        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })


       $(document).ready(function () {
         var creada = '@TempData["creada"]';
            if (creada == 'True') {
                Toast.fire({
                    icon: 'success',
                    title: 'Reservación creada correctamente'
                })
            }
        });



        //cada vez que cambia de area comunal
        $("#lista").on("change", function () {
            var id = $(this).val();
            $('#FechaEntrada').val("");
            $('#FechaSalida').val("");
            //Si no hay ninguna seleccionada, destruye los pickers
            if (id == "") {
                destroyPicker();
                return;
            }
            //si selecciona alguno, busca los horarios de ese área
            $.ajax({
                url: "/Reservacion/GetHorarioById",
                data: {
                    id: id
                },
                success: function (response) {
                    if (response != null) {
                        //setea los pickers con la hora de apertura y cierre
                        setPicker(response.horaApertura, response.horaCierre);
                    }
                }

            });

        });

        //Muestre el pronóstico del tiempo
        function showWeather() {
            var allowedValues = [2]; // Valores permitidos, los que sean al aire libre

            var fecha = moment($('#FechaEntrada').val(), 'DD-MM-YYYY HH:mm:ss').format('YYYY-MM-DD');
            var selectedValue = $("#lista").val();
            //Si es al aire libre, verifica
            if (allowedValues.includes(parseInt(selectedValue))) {
                const url = `https://api.weatherbit.io/v2.0/forecast/daily?key=e698473dbea54602882eb96b181fc234&city=Alajuela,CR&lang=es&units=M&days=7&include=weather,precipitation`;
                $.ajax({
                    url: url,
                    success: function (response) {
                        var fechaData = null;
                        var probabilidadLluvia = null;
                        //busca el registro que coincida con la fecha digitada
                        response.data.forEach(function (forecast) {
                            if (forecast.valid_date === fecha) {
                                fechaData = forecast;
                                return;

                            }
                        });
                        if (fechaData === null) {
                            return;
                        }


                        Swal.fire({
                            position: 'center',
                            title: 'Pronóstico',
                            text: 'Parece que el área comunal que seleccionaste está al aire libre. El pronóstico es el siguiente: ' + fechaData.weather.description + ". La probabilidad de lluvia es del: " + fechaData.pop + "%",
                            // text: 'holaaaaaaaaaaaaa',
                            imageUrl: 'https://www.weatherbit.io/static/img/icons/' + fechaData.weather.icon + '.png',
                            imageWidth: 100,
                            imageHeight: 100,
                            imageAlt: 'Custom image',
                            showCancelButton: true,
                            confirmButtonColor: '#5eb548',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Continuar',
                            cancelButtonText: 'Cancelar',

                        }).then((result) => {
                            if (!result.isConfirmed) {
                                $('#FechaEntrada').val("");
                                $('#FechaSalida').val("");
                            }
                        });


                    },


                });
            }
        }


        //Destruye los pickers
        function destroyPicker() {
            $('#FechaEntrada, #FechaSalida').datetimepicker("destroy");  //destruir el picker
            $('#FechaEntrada').val("");
            $('#FechaSalida').val("");
        }

        //Setea el picker, si no viene nada pone la hora desde las 00:00 hasta las 23:59
        function setPicker(hourMin = "00:00", hourMax = "23:59") {

            $('#FechaEntrada, #FechaSalida').datetimepicker({
                format: 'd-m-Y H:i:s',
                minTime: hourMin,
                maxTime: hourMax,
                minDate: moment().add(1, 'days').toDate(),  //El día siguientes
                maxDate: moment().add(7, 'days').toDate(), //los siguientes 7 días
            });
            $.datetimepicker.setLocale('es'); //idioma español
        }


        $(document).ready(function () {
            $("#FechaSalida").on("change", function () {
                showWeather();
            });
        });


        $(document).ready(function () {
            $('#dataTableReservacion').DataTable({
                responsive: true,
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
                },
                "lengthChange": false,
                "paging": false,

            });
        })

        //Verifica si la fecha de salida es mayor
        function isFechaSalidaMayor(fechaEntrada,fechaSalida) {
            if (fechaEntrada >= fechaSalida) {
                Toast.fire({
                    icon: 'error',
                    title: 'La hora de salida debe de ser mayor'
                });
                $('#FechaEntrada').val("");
                $('#FechaSalida').val("");
                return false;
            }
            return true;
        }


        //Envía la petición
        $("#form").submit(function (event) {
            event.preventDefault();
            $("#validateFechaEntrada").addClass("d-none");
            $("#validateFechaSalida").addClass("d-none");
            $("#validateFechaSalida").text("");
            $("#validateFechaEntrada").text("");


            var fechaEntrada = moment($('#FechaEntrada').val(), 'DD-MM-YYYY HH:mm:ss').toDate(); //Transforma la fecha a date
            var fechaSalida = moment($('#FechaSalida').val(), 'DD-MM-YYYY HH:mm:ss').toDate();

            if (!isFechaSalidaMayor(fechaEntrada, fechaSalida)) {
                return;
            }

            //Si la fecha de entrada no es válida o no se digitó
            if (!moment(fechaEntrada, "DD-MM-YYYY HH:mm:ss", true).isValid()) {
                $("#validateFechaEntrada").text("Digite la fecha de inicio");
                $("#validateFechaEntrada").removeClass("d-none");
                return;
            }
            //Si la fecha de salida no es válida o no se digitó
            if (!moment(fechaSalida, "DD-MM-YYYY HH:mm:ss", true).isValid()) {
                $("#validateFechaSalida").text("Digite la fecha de salida");
                $("#validateFechaSalida").removeClass("d-none");
                return;
            }
            //Si las fechas no son del mismo día
            if (!moment(fechaEntrada).isSame(fechaSalida, 'day')) {
                $("#validateFechaSalida").text("Las fechas deben ser del mismo día, no puede hacer una reservación por más de un día");
                $("#validateFechaSalida").removeClass("d-none");
                return;
            }



            $.ajax({
                url: "/Reservacion/ValidarHorario",
                data: {
                    fechaEntrada: fechaEntrada.toISOString(),
                    fechaSalida: fechaSalida.toISOString(),
                    idAreaComunal : $("#lista").val()
                },
                success: function (response) {
                    //Si existe horario que choque, muestra mensaje
                    if (response.existeHorario) {
                        $('#FechaEntrada').val("");
                        $('#FechaSalida').val("");
                        Toast.fire({
                            icon: 'error',
                            title: 'Ya existe una reservación en el horario digitado'
                        })

                    } else {
                        $("#form")[0].submit(); // Envía el formulario
                    }
                }

            });

        })


        $(document).on("click", ".btnCancelar", function () {
            var id = $(this).data('id');

            Swal.fire({
                title: 'Cancelar',
                text: 'Motivo de cancelación',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                inputPlaceholder: 'Opcional',
                showCancelButton: true,
                confirmButtonText: 'Aceptar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Guardar el estado en el servidor usando una solicitud AJAX
                    $.ajax({
                        url: '/Reservacion/CambiarEstado',
                        type: 'POST',
                        data: {
                            id: id,
                            nota: result.value,
                        },
                        success: function (response) {

                            Toast.fire({
                                icon: 'success',
                                title: 'Reservación cancelada correctamente'
                            })

                            $('#listaReservacion').html('');
                            $('#listaReservacion').html(response);

                            $('#dataTableReservacion').DataTable({
                                responsive: true,
                                "language": {
                                    "url": "https://cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
                                },
                                "lengthChange": false,
                                "paging": false,

                            });
                        },
                        error: function () {
                            Toast.fire({
                                icon: 'error',
                                title: 'Error al cancelar la reservación'
                            })
                        }
                    });
                }
            });
        });

    </script>




}
